version: "3.9"

services:
  logging-service:
    container_name: face-recognition-logging-service
    build: ./logging_service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8004/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      cassandra-ddl:
        condition: service_completed_successfully
    networks:
      - face-recognition-network
    ports:
      - "8004:8004"
    volumes:
      - ./logging_service:/opt/app

  cassandra-node-1:
    container_name: face-recognition-cassandra-node-1
    image: "cassandra:latest"
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    restart: always
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    networks:
      - face-recognition-network

  cassandra-node-2:
    container_name: cassandra-node-2
    image: "cassandra:latest"
    depends_on:
      cassandra-node-1:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    restart: always
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - CASSANDRA_SEEDS=cassandra-node-1
    networks:
      - face-recognition-network

  cassandra-node-3:
    container_name: cassandra-node-3
    image: "cassandra:latest"
    depends_on:
      cassandra-node-2:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    restart: always
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - CASSANDRA_SEEDS=cassandra-node-2
    networks:
      - face-recognition-network

  cassandra-ddl:
    container_name: face-recognition-cassandra-ddl
    image: "cassandra:latest"
    depends_on:
      cassandra-node-1:
        condition: service_healthy
    volumes:
      - ./logging_service/ddl.cql:/ddl.cql
    command: /bin/bash -c "cqlsh cassandra-node-1 -f /ddl.cql"
    networks:
      - face-recognition-network

  logging-analytics:
    container_name: face-recognition-logging-analytics
    image: docker.io/bitnami/spark:3.3.0
    depends_on:
      cassandra-node-1:
        condition: service_healthy
    command: /bin/bash -c "spark-submit --packages com.datastax.spark:spark-cassandra-connector_2.12:3.3.0 --master spark://face-recognition-spark:7077 --deploy-mode client /opt/app/analytics.py"
    networks:
      - face-recognition-network
    volumes:
      - ./logging_service:/opt/app

  spark:
    container_name: face-recognition-spark
    image: docker.io/bitnami/spark:3.3.0
    networks:
      - face-recognition-network
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'


  spark-worker:
    container_name: face-recognition-spark-worker
    image: docker.io/bitnami/spark:3
    networks:
      - face-recognition-network
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://face-recognition-spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./logging_service:/opt/app

  access-service:
    container_name: face-recognition-access-service
    build: ./access_service
    networks:
      - face-recognition-network

  identity-service:
    container_name: face-recognition-identity-service
    build: ./identity_service
    networks:
      - face-recognition-network

networks:
  face-recognition-network:
    name: face-recognition-network
